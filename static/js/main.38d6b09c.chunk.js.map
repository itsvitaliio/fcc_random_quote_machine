{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","generateQuote","chosenQuote","quotes","state","apiResult","randomNumber","Math","floor","random","length","forEach","element","index","push","setState","text","quote","author","changeColor","color","i","clickCount","bgColor","shareOnTwitter","window","open","encodeURIComponent","isLoaded","handleClick","bind","this","fetch","headers","Accept","then","response","json","responseData","quotesArrayLength","catch","error","id","href","onClick","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sQA+GeA,E,kDA3Gb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAqCRC,cAAgB,WACd,IAAMC,EAAc,GACdC,EAAS,EAAKC,MAAMC,UACtBC,EAAeC,KAAKC,MAAOD,KAAKE,SAAW,EAAKL,MAAMC,UAAUK,OAAU,GAE9EP,EAAOQ,SAAQ,SAASC,EAASC,GAC5BA,IAAUP,GACXJ,EAAYY,KAAKF,MAGrB,EAAKG,SAAS,CACZC,KAAKd,EAAY,GAAGe,MACpBC,OAAOhB,EAAY,GAAGgB,UAlDP,EAsDnBC,YAAc,WACZ,IAAMC,EAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,WACvDC,EAAI,EAAKjB,MAAMkB,WAEnB,EAAKP,SAAS,CACZO,WAAY,EAAKlB,MAAMkB,WAAW,IAGjCD,EAAE,EACH,EAAKN,SAAS,CACZQ,QAASH,EAAMC,KAETA,GAAG,EACX,EAAKN,SAAS,CACZQ,QAASH,EAAMC,GACfC,WAAY,IAED,IAAJD,GACT,EAAKN,SAAS,CACZO,WAAY,EAAKlB,MAAMkB,WAAW,EAClCC,QAASH,EAAMC,MA1EF,EA+EnBG,eAAiB,WACf,IAAIR,EAAI,UAAM,EAAKZ,MAAMc,OAAjB,cAA6B,EAAKd,MAAMY,MAChDS,OAAOC,KAAK,iDAAiDC,mBAAmBX,GAAO,GAAI,uFA/E3F,EAAKZ,MAAQ,CACXC,UAAW,KACXa,OAAQ,GACRF,KAAM,GACNY,UAAU,EACVL,QAAS,UACTD,WAAY,GAEd,EAAKO,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKN,eAAiB,EAAKA,eAAeM,KAApB,gBAXL,E,+CAcnB,WACEC,KAAK9B,gBACL8B,KAAKZ,gB,+BAGP,WAAqB,IAAD,OAClBa,MAAM,yIAA0I,CAC9IC,QAAS,CACPC,OAAQ,sBAGXC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACL,EAAKvB,SAAS,CACZV,UAAWiC,EAAanC,OACxByB,UAAU,EACVV,OAAQoB,EAAanC,OAAO,GAAGe,OAC/BF,KAAMsB,EAAanC,OAAO,GAAGc,MAC7BsB,kBAAmBD,EAAanC,OAAOO,YAG1C8B,OAAM,SAAAC,GAAK,OAAI,EAAK1B,SAAS,CAAE0B,e,oBAiDlC,WACE,OACE,sBAAKC,GAAG,OAAR,UACA,4FAGyBX,KAAK3B,MAAMmB,QAHpC,4CAI0BQ,KAAK3B,MAAMmB,QAJrC,kCAQE,oBAAImB,GAAG,QAAP,kCACA,sBAAKA,GAAG,YAAR,UACE,mBAAGA,GAAG,OAAN,SAAcX,KAAK3B,MAAMY,OACzB,oBAAG0B,GAAG,SAAN,gBAAmBX,KAAK3B,MAAMc,UAC9B,mBAAGwB,GAAG,cAAcC,KAAK,2BAA2BC,QAASb,KAAKP,eAAlE,mBACA,qBAAKkB,GAAG,YAAYE,QAASb,KAAKF,YAAlC,iC,GArGQgB,aCSHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBb,MAAK,YAAkD,IAA/Cc,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.38d6b09c.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      apiResult: null,\n      author: '',\n      text: '',\n      isLoaded: false,\n      bgColor: '#f99192',\n      clickCount: 0,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.shareOnTwitter = this.shareOnTwitter.bind(this);\n  }\n\n  handleClick() {\n    this.generateQuote();\n    this.changeColor();\n  }\n\n  componentDidMount() {\n    fetch('https://gist.githubusercontent.com/camperbot/5a022b72e96c4c9585c32bf6a75f62d9/raw/e3c6895ce42069f0ee7e991229064f167fe8ccdc/quotes.json', {\n      headers: {\n        Accept: \"application/json\",\n      }\n    })\n    .then(response => response.json())\n    .then((responseData) => {\n      this.setState({\n        apiResult: responseData.quotes,\n        isLoaded: true,\n        author: responseData.quotes[0].author,\n        text: responseData.quotes[0].quote,\n        quotesArrayLength: responseData.quotes.length,\n      });\n    })\n    .catch(error => this.setState({ error }));\n  }\n\n  generateQuote = () => {\n    const chosenQuote = [];\n    const quotes = this.state.apiResult;\n    let randomNumber = Math.floor((Math.random() * this.state.apiResult.length) + 1);\n\n    quotes.forEach(function(element, index) {\n      if(index === randomNumber) {\n        chosenQuote.push(element)\n      }\n    })\n    this.setState({\n      text:chosenQuote[0].quote,\n      author:chosenQuote[0].author,\n    })\n  }\n\n  changeColor = () => {\n    const color = ['#385a7c', '#f97171', '#f99192', '#8ad6cc', '#b2eee6'];\n    let i = this.state.clickCount;\n\n    this.setState({\n      clickCount: this.state.clickCount+1,\n    });\n\n    if(i<4) {\n      this.setState({\n        bgColor: color[i],\n      });\n    } else if(i>=4) {\n      this.setState({\n        bgColor: color[i],\n        clickCount: 0,\n      });\n    } else if (i===0) {\n      this.setState({\n        clickCount: this.state.clickCount+1,\n        bgColor: color[i],\n      });\n    }\n  }\n\n  shareOnTwitter = () => {\n    let text = `${this.state.author} - ${this.state.text}`\n    window.open('http://twitter.com/share?url=twitter.com&text='+encodeURIComponent(text), '', 'left=0,top=0,width=550,height=450,personalbar=0,toolbar=0,scrollbars=0,resizable=0');\n  }\n\n  render() {\n    return (\n      <div id=\"main\">\n      <style>\n          {`\n          :root {\n            --main-bg-color: ${this.state.bgColor};\n            --main-txt-color: ${this.state.bgColor};\n            }\n          `}\n        </style>\n        <h1 id=\"title\">Random Quote Machine</h1>\n        <div id=\"quote-box\">\n          <p id=\"text\">{this.state.text}</p>\n          <p id=\"author\"> - {this.state.author}</p>\n          <a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\" onClick={this.shareOnTwitter}>Tweet</a>\n          <div id=\"new-quote\" onClick={this.handleClick}>New Quote</div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}